#include <iostream>
#include<bits/stdc++.h>
#include<vector>
#include<algorithm>
#include<climits>
#include<string>
#include<cmath>
#include<unordered_set>
#include<utility>
#include<bitset>

using ll = long long;
using namespace std;

void merge(vector<int> &arr, int st, int mid, int end) { 
    vector<int> temp;
    int i=st, j=mid+1;

    while (i <= mid && j <= end) {
        if (arr[i] <= arr[j]) {
            temp.push_back(arr[i]);
            i++;
        }
        else {
            temp.push_back(arr[j]);
            j++;
        }
    }
    
    while (i <= mid) {
        temp.push_back(arr[i]);
        i++;
    }
    while (j <= end) {
        temp.push_back(arr[j]);
        j++;
    }

    for (int idx=0; idx < temp.size(); idx++) {
        arr[idx+st] = temp[idx];
    }
    
}


void mergesort(vector<int> &arr, int st, int end) {
    if (st < end) {
        int mid = (st + (end-st)/2);
    
        mergesort(arr, st, mid);
        mergesort(arr, mid+1, end);

        merge(arr, st, mid, end);
    }
}


int main() {
    vector<int> arr = {12,31,35,8,17,32};

    mergesort (arr, 0, arr.size()-1);

    for (int val : arr) {
        cout << val << " ";
    }
    cout << endl;

    return 0;
}

// time compl. = O(n logn)
// space compl. = O(n)


OUTPUT:
8,12,17,31,32,35
